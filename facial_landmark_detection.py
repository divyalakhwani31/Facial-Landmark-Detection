# -*- coding: utf-8 -*-
"""Facial Landmark Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eakr5WnUg8tcYLSuYrygaVCm3e4l-yr5
"""

import cv2
import dlib
import numpy as np
from imutils import face_utils
import imutils

image_path = "2faces.png"

image = cv2.imread(image_path)
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

cv2.imshow("normal-image",image)
cv2.imshow("gray-image",gray_image)

detector = dlib.get_frontal_face_detector()
predictor = dlib.shape_predictor("shape_predictor_68_face_landmarks.dat")

rect_faces = detector(gray_image)
for (k, face) in enumerate(rect_faces):
  landmarks = predictor(gray_image, face)

  (x, y, w, h) = face_utils.rect_to_bb(face)
  cv2.rectangle(image, (x, y), (x + w, y + h), (0, 0, 0), 2)
  cv2.putText(image, "Face #{}".format(k + 1), (x - 10, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 2)
  
  print('\nface #',k+1)
  print('\n   Jawline\n')
  for i in range(0, 17):  # jawline coordinates
    cord = (landmarks.part(i).x, landmarks.part(i).y)
    print(cord)
    cv2.circle(image, cord, 1, (255, 0, 0), 2)
  
  for i in range(0,16):
    cord1 = (landmarks.part(i).x, landmarks.part(i).y)
    cord2 = (landmarks.part(i+1).x, landmarks.part(i+1).y)
    cv2.line(image, cord1, cord2, (0,0,0), 2)

  print('\n   Eyebrows\n')
  for i in range(17, 27):
    cord = (landmarks.part(i).x, landmarks.part(i).y)
    print(cord)
    cv2.circle(image, cord, 1, (255, 0, 0), 2)

  print('\n   Nose\n')
  for i in range(27, 36):
    cord = (landmarks.part(i).x, landmarks.part(i).y)
    print(cord)
    cv2.circle(image, cord, 1, (255, 0, 0), 2)
  
  print('\n   Left Eye\n')
  for i in range(36, 42):
    cord = (landmarks.part(i).x, landmarks.part(i).y)
    print(cord)
    cv2.circle(image, cord, 1, (255, 0, 0), 2)

  print('\n   Right Eye\n')
  for i in range(42, 48):
    cord = (landmarks.part(i).x, landmarks.part(i).y)
    print(cord)
    cv2.circle(image, cord, 1, (255, 0, 0), 2)

  print('\n   Lips\n')
  for i in range(48, 68):
    cord = (landmarks.part(i).x, landmarks.part(i).y)
    print(cord)
    cv2.circle(image, cord, 1, (255, 0, 0), 2)

image = imutils.resize(image, width=500, height = 500)
cv2.imshow("detected-landmarks", image)

cv2.imwrite(image_path, image)
